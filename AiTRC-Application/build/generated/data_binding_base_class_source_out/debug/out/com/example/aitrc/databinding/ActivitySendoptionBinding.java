// Generated by view binder compiler. Do not edit!
package com.example.aitrc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aitrc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySendoptionBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout HOD;

  @NonNull
  public final TextView HODTEXT;

  @NonNull
  public final LinearLayout Principal;

  @NonNull
  public final TextView Principaltext1;

  @NonNull
  public final TextView titleView;

  private ActivitySendoptionBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout HOD,
      @NonNull TextView HODTEXT, @NonNull LinearLayout Principal, @NonNull TextView Principaltext1,
      @NonNull TextView titleView) {
    this.rootView = rootView;
    this.HOD = HOD;
    this.HODTEXT = HODTEXT;
    this.Principal = Principal;
    this.Principaltext1 = Principaltext1;
    this.titleView = titleView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySendoptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySendoptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sendoption, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySendoptionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.HOD;
      LinearLayout HOD = ViewBindings.findChildViewById(rootView, id);
      if (HOD == null) {
        break missingId;
      }

      id = R.id.HODTEXT;
      TextView HODTEXT = ViewBindings.findChildViewById(rootView, id);
      if (HODTEXT == null) {
        break missingId;
      }

      id = R.id.Principal;
      LinearLayout Principal = ViewBindings.findChildViewById(rootView, id);
      if (Principal == null) {
        break missingId;
      }

      id = R.id.Principaltext1;
      TextView Principaltext1 = ViewBindings.findChildViewById(rootView, id);
      if (Principaltext1 == null) {
        break missingId;
      }

      id = R.id.title_view;
      TextView titleView = ViewBindings.findChildViewById(rootView, id);
      if (titleView == null) {
        break missingId;
      }

      return new ActivitySendoptionBinding((RelativeLayout) rootView, HOD, HODTEXT, Principal,
          Principaltext1, titleView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
